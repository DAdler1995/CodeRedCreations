@model List<CodeRedCreations.Models.ApplicationUser>
@inject Microsoft.AspNetCore.Identity.UserManager<CodeRedCreations.Models.ApplicationUser> _userManager;
@using CodeRedCreations.Models.Account;
@{
    ViewData["Title"] = "Manage Users";
    var allUserRefs = (List<UserReferral>)ViewData["AllUserRefs"];
}
<h2>@ViewData["Title"]</h2>
<p class="text-success">@ViewData["SuccessMessage"]</p>
<table class="table table-hover table-responsive" id="ManageUsers">
    <thead>
        <tr>
            <th>User</th>
            <th>Role</th>
            <th>Set Role</th>
            <th colspan="2">Referrals</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            var userRef = allUserRefs.FirstOrDefault(x => x.UserId == item.Id);
            var roles = _userManager.GetRolesAsync(await _userManager.FindByEmailAsync(item.Email)).Result;
            var userConfirm = item.EmailConfirmed;
            <tr class="@((roles.Contains(UserRoles.Sponsor.ToString())) ? "info" : "")">
                <td>
                    @item.UserName
                    <p>Confirmed: <strong class="@((userConfirm) ? "" : "text-danger")">@userConfirm</strong></p>
                </td>
                <td>
                    <ul class="list-unstyled">
                        @foreach (var role in roles)
                        {
                            <li>@role</li>
                        }
                    </ul>
                </td>
                <td>
                    <div class="dropdown">
                        <a class="dropdown-toggle btn-link" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                            New Role
                            <span class="caret"></span>
                        </a>
                        <ul class="dropdown-menu" role="menu">
                            @foreach (var role in Enum.GetValues(typeof(UserRoles)))
                            {
                                <li>
                                    <a asp-controller="Admin" asp-action="UpdateRole" asp-route-email="@item.Email" asp-route-newRole="@role">@role</a>
                                </li>
                            }
                        </ul>
                    </div>
                </td>
                @if (userRef != null)
                {
                    <td class="@((userRef.Enabled) ? "success" : "danger")">
                        <a asp-controller="Admin" asp-action="ToggleReferral" asp-route-id="@item.Id">@((userRef.Enabled) ? "Disable" : "Enable")</a>
                    </td>
                    if (userRef.Enabled)
                    {
                        <td class="@((userRef.Enabled) ? "success" : "danger")">
                            <form asp-controller="Admin" asp-action="SetStoreCredit" method="post">
                                <input hidden="hidden" class="hidden" name="UserId" id="UserId" value="@item.Id" />
                                <div class="form-group">
                                    <div class="input-group">
                                        <span class="input-group-addon">Store Credit %:</span>
                                        <input type="number" class="form-control" name="StoreCredit" id="StoreCredit" value="@userRef.StoreCreditPercent" />
                                        <span class="input-group-btn">
                                            <button type="submit" class="btn btn-default">Change Percent</button>
                                        </span>
                                    </div>
                                </div>
                            </form>
                            <form asp-controller="Admin" asp-action="SetRefPercent" method="post">
                                <input hidden="hidden" class="hidden" name="UserId" id="UserId" value="@item.Id" />
                                <div class="form-group">
                                    <div class="input-group">
                                        <span class="input-group-addon">Payout %:</span>
                                        <input type="number" class="form-control" name="RefPercent" id="RefPercent" value="@userRef.PayoutPercent" />
                                        <span class="input-group-btn">
                                            <button type="submit" class="btn btn-default">Change Percent</button>
                                        </span>
                                    </div>
                                </div>
                            </form>
                        </td>

                    }
                    else
                    {
                        <td class="danger"></td>
                    }
                }
                else
                {
                    <td colspan="2"></td>

                }
                <td class="text-right">
                    @if (!_userManager.GetRolesAsync(await _userManager.FindByEmailAsync(item.Email)).Result.Contains("Admin"))
                    {
                        <a href="#" onclick="DeleteUser('@item.Email')">Delete User</a>
                    }
                    else
                    {
                        <span>Cannot delete admins.</span>

                    }
                </td>
            </tr>
        }
    </tbody>
</table>
<script>
    function UpdateRole(email, newRole) {
        $.ajax({
            type: "POST",
            url: '@Url.Action("UpdateRole", "Admin")',
            data: { email: email, newRole: newRole },
            success: function (response, textStatus, jqXHR) {
                location.reload();
            }
        });
    }

    function DeleteUser(email) {
        if (confirm('Are you sure you wish to delete ' + email + '\'s account?')) {
            $.ajax({
                type: "POST",
                url: '@Url.Action("DeleteUser", "Admin")',
                data: { email: email },
                success: function (response, textStatus, jqXHR) {
                    location.reload();
                }
            });
        }
    }
</script>