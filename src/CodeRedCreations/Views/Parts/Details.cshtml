@model ProductDetailsView
@using CodeRedCreations.Models;
@using System.Globalization;
@using System.Text;
@using CodeRedCreations.Methods;
@{
    var product = Model.ProductModel;
    ViewData["Title"] = $"{Model.ProductModel.Brand.Name} - {Model.ProductModel.Name}";
    var cars = Model.ProductModel.CarProducts.Select(x => x.Car).ToList();

    var url = $"http://{Context.Request.Host}{Context.Request.Path}{Context.Request.QueryString}";
}
<div class="row row-eq-height">
    <cache enabled="true" expires-after="@TimeSpan.FromHours(12)" vary-by="@Model.ProductModel.PartId">
        <div class="col-sm-6">

            <div class="carousel slide flexbox-container" id="productImageCarousel" data-ride="carousel" data-interval="10000" data-pause="hover">
                <div class="carousel-inner" role="listbox">
                    @if (Model.Images != null && Model.Images.Count != 0)
                    {
                        <div class="item active">
                            <img class="img-responsive" src="@(await Static.GetImageSrcAsync(product.Images.FirstOrDefault().Bytes))">
                        </div>

                        @foreach (var image in Model.Images.Skip(1))
                        {
                            var imgSrc = await @Static.GetImageSrcAsync(image.Bytes);

                            <div class="item">
                                <img class="img-responsive" src="@imgSrc">
                            </div>
                        }

                    }
                    else
                    {
                        <div class="item active">
                            <img class="img-responsive" src="~/images/Photo-Not-Available.png" />
                        </div>

                    }
                </div>
                @if (Model.Images != null && Model.Images.Count > 1)
            {
            <!-- Left and right controls -->
                    <a class="left carousel-control" href="#productImageCarousel" role="button" data-slide="prev">
                        <span class="glyphicon glyphicon-chevron-left" aria-hidden="true"></span>
                        <span class="sr-only">Previous</span>
                    </a>
                    <a class="right carousel-control" href="#productImageCarousel" role="button" data-slide="next">
                        <span class="glyphicon glyphicon-chevron-right" aria-hidden="true"></span>
                        <span class="sr-only">Next</span>
                    </a>
                }
            </div>
        </div>
    </cache>
    <div class="col-sm-6">
        @if (product.DateAdded.AddDays(14) >= DateTime.UtcNow)
        {
            <div class="ribbon left new"><span>NEW!</span></div>
        }
        else if (product.OnSale)
        {
            <div class="ribbon left sale"><span>SALE!</span></div>
        }

        <cache enabled="true" expires-after="@TimeSpan.FromHours(12)" vary-by="@Model.ProductModel.PartId">
            <h3>@product.Brand.Name</h3>
            <h4>@product.Name</h4>
            <p>
                <span>Compatible with: </span>
                @if (cars.Count() == 0)
            {
                    <span>All</span>
                }
                else if (cars.Count() == 1)
                {
                    var car = cars.FirstOrDefault();
                    <span>@car.Make @car.Model: @product.Years</span>
                }
                else
                {
                    var builder = new StringBuilder();
                    foreach (var car in cars)
                    {
                        builder.Append($"{car.Make} {car.Model}: {product.Years}<br />");
                    }
                    <a href="#" data-container="body" data-toggle="popover" data-placement="right" data-html="true" data-trigger="hover" data-content="@builder.ToString()">See all (@cars.Count())</a>
                }
            </p>
            <hr />
        </cache>

        @if (Model.NewPrice == null)
        {
            <h3 id="price" class="text-red">@product.Price.ToString("C2", new CultureInfo("en-US"))</h3>
        }
        else
        {
            <h3 id="oldPrice"><del>@product.Price.ToString("C2", new CultureInfo("en-US"))</del></h3>
            <h3 id="price" class="text-red">@Model.NewPrice.Value.ToString("C2", new CultureInfo("en-US"))</h3>
            TempData["NewPrice"] = Model.NewPrice.Value.ToString();
        }

        <p>+@product.Shipping.ToString("C2", new CultureInfo("en-US")) shipping</p>
        <p class="small">Item #@product.PartNumber</p>
        <hr />
        <form asp-controller="Parts" asp-action="PromoCode">
            <input hidden asp-for="ProductModel.PartId" value="@product.PartId" />
            <div class="input-group">
                <input asp-for="PromoModel.Code" class="form-control" type="text" placeholder="Promo Code" />
                <span class="input-group-btn">
                    <button type="submit" class="btn btn-default btn-block">Apply Code</button>
                </span>
            </div>
        </form>

        @if (Model.UserReferral != null && Model.UserReferral.Enabled && Model.UserReferral.Earnings > 1m)
            {
            <br />
                <form asp-controller="Parts" asp-action="ApplyStoreCredit" method="post">
                    <input hidden="hidden" class="hidden" asp-for="UserReferral.Id" />
                    <input hidden="hidden" class="hidden" asp-for="ProductModel.PartId" />
                    <div class="input-group">
                        <input asp-for="UserReferral.Earnings" type="number" max="@Model.UserReferral.Earnings" min="1.00" class="form-control" />
                        <span class="input-group-btn">
                            <button type="submit" class="btn btn-default">Apply Store Credit</button>
                        </span>
                    </div>
                </form>
        }
        <br />
        <form asp-controller="Parts" asp-action="BuyNow" asp-antiforgery="true">
            @Html.AntiForgeryToken()
            <input hidden asp-for="ProductModel.PartId" value="@product.PartId" />
            <input hidden="hidden" class="hidden" asp-for="UserReferral.Id" />
            <input hidden="hidden" class="hidden" name="refAmount" id="refAmount" value="@TempData["StoreCredit"]" />
            @if (Model.PromoModel != null)
            {
                <input hidden asp-for="PromoModel.Id" value="@Model.PromoModel.Id" />
            }
            <div class="input-group">
                <input id="quantity" asp-for="Quantity" class="form-control" type="number" value="1" />
                <span class="input-group-btn">
                    <button type="submit" class="btn btn-default" onclick="$(this).addClass('disabled'); $('#buyNowResults').show('slow');">Buy Now</button>
                    <a id="addToCart" class="btn btn-default" asp-area="" asp-controller="ShoppingCart" asp-action="AddToCart" asp-route-id="@product.PartId" onclick="AddQuantity()"><span class="glyphicon glyphicon-shopping-cart"></span> Add to Cart</a>
                </span>
            </div>
            <p style="display: none" id="buyNowResults">Redirecting to PayPal checkout. Please wait.</p>
        </form>
    </div>
</div>

<cache enabled="true" expires-after="@TimeSpan.FromHours(12)" vary-by="@Model.ProductModel.PartId">
    <div class="row">
        <div class="col-xs-12">
            <ul class="nav nav-tabs">
                <li class="active"><a data-toggle="tab" href="#productDescription">Product Description</a></li>
                <li><a data-toggle="tab" href="#productDetails">Product Details</a></li>
                <li><a data-toggle="tab" href="#brandDescription">@product.Brand.Name Description</a></li>

                <li class="pull-right hidden-sm hidden-xs"><a class="btn-link" onclick="share('@Model.ProductModel.Name', '@url')">Share <i class="fa fa-facebook-square"></i></a></li>
                <li class="pull-right hidden-sm hidden-xs"><a class="btn-link" onclick="tweet('@Model.ProductModel.Name', '@url')">Tweet <i class="fa fa-twitter-square"></i></a></li>
            </ul>
            <div class="tab-content">
                <div id="productDescription" class="tab-pane fade in active">
                    <h3>Product Description</h3>
                    <p>@Html.Raw(product.Description.Replace(Environment.NewLine, "<br />"))</p>
                </div>
                <div id="productDetails" class="tab-pane fade">
                    <h3>Product Details</h3>
                    <dl class="dl-horizontal">
                        <dt>Part Type:</dt>
                        <dd>@product.PartType</dd>
                        <dt>Product Number:</dt>
                        <dd>@product.PartNumber</dd>
                        <dt>Compatible Car(s):</dt>
                        @if (Model.ProductModel.CarProducts.Select(x => x.Car).Count() > 0)
                        {
                            @foreach (var car in Model.ProductModel.CarProducts.Select(x => x.Car))
                            {

                                <dd>@car.Make @car.Model: @Model.ProductModel.Years</dd>
                            }
                        }
                        else
                        {
                            <dd>All</dd>
                        }
                        <dt>Brand:</dt>
                        <dd>@product.Brand.Name</dd>
                    </dl>
                </div>
                <div id="brandDescription" class="tab-pane fade">
                    <h3>@product.Brand.Name Description</h3>
                    <p>@product.Brand.Description</p>
                </div>
            </div>
        </div>
    </div>
</cache>